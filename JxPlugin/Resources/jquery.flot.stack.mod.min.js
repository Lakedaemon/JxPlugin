(function($){var options={series:{stack:null}};function init(plot){function findMatchingSeries(s,allseries){var res=[];for(var i=allseries.length-1;i>=0;--i){if(s==allseries[i])break;if(allseries[i].stack==s.stack)res.push(allseries[i])}return res}function stackData(plot,s,datapoints){if(s.stack==null)return;var other=findMatchingSeries(s,plot.getData());if(!other)return;for(var z in other){var ps=datapoints.pointsize,points=datapoints.points,otherps=other[z].datapoints.pointsize,otherpoints=other[z].datapoints.points,newpoints=[],px,py,intery,qx,qy,withlines=s.lines.show,withbars=s.bars.show,withsteps=withlines&&s.lines.steps,i=0,j=0,l;while(true){if(i>=points.length)break;l=newpoints.length;if(j>=otherpoints.length||otherpoints[j]==null||points[i]==null){for(m=0;m<ps;++m)newpoints.push(points[i+m]);i+=ps}else{px=points[i];py=points[i+1];qx=otherpoints[j];qy=otherpoints[j+1];if(px==qx){for(m=0;m<ps;++m)newpoints.push(points[i+m]);newpoints[l+1]+=qy;i+=ps;j+=otherps}else if(px>qx){if(withlines&&i>0&&points[i-ps]!=null){intery=py+(points[i-ps+1]-py)*(qx-px)/(points[i-ps]-px);newpoints.push(qx);newpoints.push(intery+qy);for(m=2;m<ps;++m)newpoints.push(points[i+m])}j+=otherps}else{for(m=0;m<ps;++m)newpoints.push(points[i+m]);if(withlines&&j>0&&otherpoints[j-ps]!=null){intery=qy+(otherpoints[j-ps+1]-qy)*(px-qx)/(otherpoints[j-ps]-qx);newpoints[l+1]+=intery}i+=ps}if(l!=newpoints.length&&withbars)newpoints[l+2]+=qy}if(withsteps&&l!=newpoints.length&&l>0&&newpoints[l]!=null&&newpoints[l]!=newpoints[l-ps]&&newpoints[l+1]!=newpoints[l-ps+1]){for(m=0;m<ps;++m)newpoints[l+ps+m]=newpoints[l+m];newpoints[l+1]=newpoints[l-ps+1]}}datapoints.points=newpoints}}plot.hooks.processDatapoints.push(stackData)}$.plot.plugins.push({init:init,options:options,name:'stack',version:'1.0'})})(jQuery);